name: INDPRO
headers: Индекс промышленного производства
units: 
  - yoy
  - rog
  - ytd
---
name: GDP
headers:
  - Валовой внутренний продукт
  - Объем валового внутреннего продукта
  - Объем ВВП
units: 
  - bln_rub
  - yoy 
---
name: DWELL
units: mln_m2
headers: 
  - Ввод в действие жилых домов
  - Ввод в действие жилых домов организациями всех форм собственности
---
# Wages
name: WAGE_NOMINAL
units: rub
headers: 
  - Среднемесячная номинальная начисленная заработная плата работников организаций
  - Среднемесячная номинальная начисленная заработная плата одного работника
---
name: WAGE_REAL
units: 
  - yoy
  - rog
headers:   
  - Реальная начисленная заработная плата работников организаций
  - Реальная начисленная заработная плата одного работника
---
name: PPI
units: rog
headers: Индексы цен производителей промышленных товаров
---
name: AGROPROD
units: yoy
headers: 
  - Индекс производства продукции сельского хозяйства в хозяйствах всех категорий
  - Продукция сельского хозяйства в хозяйствах всех категорий
---
name: TRANSPORT_FREIGHT
units: bln_tkm
headers: Коммерческий грузооборот транспорта

---
name: UNEMPL
units: 
   - mln
   - yoy
   - pct_ean
headers:
  - Общая численность безработных
mandatory: false 

#TODO: add proper definitions
#	Год1) Year1)	Кварталы1) / Quarters1)	Янв. Jan.	Фев. Feb.	Март Mar.	Апр. Apr.	Май May	Июнь June	Июль July	Август Aug.	Сент. Sept.	Окт. Oct.	Нояб. Nov.	Дек. Dec.			
#		I	II	III	IV												
#4.1.5. Уровень безработицы в возрасте 15-72 лет, % / Unemployment rate 15 to 72 years old, percent																	
#1999	13,0	14,3	13,0	12,3	12,5	14,3	14,6	14,0	13,5	12,9	12,8	12,5	12,1	12,2	12,4	12,6	12,5
#2017	5,2	5,6	5,2	5,0	5,1	5,6	5,6	5,4	5,3	5,2	5,1	5,1	4,9	5,0	5,1	5,1	5,1
#4.1.6. Уровень безработицы в возрасте 15 лет и старше2), % / Unemployment rate aged 15 years and over2), percent																	
#2017	5,2	5,5	5,2	5,0	5,1	5,6	5,6	5,4	5,3	5,2	5,1	5,1	4,9	5,0	5,0	5,1	5,1
#2018
 
---
start_with: '3.5. Индекс потребительских цен'
end_with: '4. Социальная сфера'
commands:
  - name: CPI
    headers: Индекс потребительских цен
    units: rog
    force_units: true    
  - name: CPI_FOOD
    headers: продукты питания 
    units: rog
    force_units: true
  - name: CPI_NONFOOD
    headers: 
      - 'непродовольственные товары'
      - 'непродовольст- венные товары'
    units: rog
    force_units: true
  - name: CPI_SERVICES
    headers: услуги
    units: rog
    force_units: true   
  - name: CPI_ALCOHOL
    headers: 'алкогольные напитки'
    units: 'rog'
    force_units: true 
--- 
start_with: '2.2. Сальдированный финансовый результат'
end_with: 'Убыточные организации'
commands:
  - name: PROFIT_MINING
    headers: Добыча полезных ископаемых
    units: mln_rub
    force_units: true
    row_format: 'fiscal'
---     
start_with:
  - 1.9. Внешнеторговый оборот – всего     
  - 1.10. Внешнеторговый оборот – всего
end_with:
  - 1.9.1. Внешнеторговый оборот со странами дальнего зарубежья
  - 1.10.1. Внешнеторговый оборот со странами дальнего зарубежья
  - 1.10.1.Внешнеторговый оборот со странами дальнего зарубежья
commands:
  - name: EXPORT_GOODS
    headers: 
      - экспорт товаров – всего
      - Экспорт товаров
    units: bln_usd
  - name: IMPORT_GOODS
    headers: 
      - импорт товаров – всего
      - Импорт товаров
    units: bln_usd
    
#"""
#PARSING_DEFINITION_BY_SEGMENT = [
#    dict(
#        boundaries=[
#            dict(start='1.9. Внешнеторговый оборот – всего',
#                 end='1.9.1. Внешнеторговый оборот со странами дальнего зарубежья'),
#            dict(start='1.10. Внешнеторговый оборот – всего',
#                 end='1.10.1. Внешнеторговый оборот со странами дальнего зарубежья'),
#            dict(start='1.10. Внешнеторговый оборот – всего',
#                 end='1.10.1.Внешнеторговый оборот со странами дальнего зарубежья')],
#        commands=[
#            dict(
#                var='EXPORT_GOODS',
#                header=['экспорт товаров – всего', 'Экспорт товаров'],
#                unit='bln_usd'),
#            dict(
#                var='IMPORT_GOODS',
#                header=['импорт товаров – всего',
#                        'Импорт товаров'],
#                unit='bln_usd')]
#    ),
#    dict(
#        boundaries=[
#            dict(start='1.6. Инвестиции в основной капитал',
#                 end='1.6.1. Инвестиции в основной капитал организаций'),
#            dict(start='1.7. Инвестиции в основной капитал',
#                 end='1.7.1. Инвестиции в основной капитал организаций')],
#        commands=[
#            dict(
#                var='INVESTMENT',
#                header=['Инвестиции в основной капитал'],
#                unit=['bln_rub', 'yoy', 'rog'])]
#    ),

#    ),
#    dict(
#        boundaries=[
#            dict(start='1.12. Оборот розничной торговли',
#                 end='1.12.1. Оборот общественного питания'),
#            dict(start='1.13. Оборот розничной торговли',
#                 end='1.13.1. Оборот общественного питания')],
#        commands=[
#            dict(var='RETAIL_SALES',
#                 header='Оборот розничной торговли',
#                 unit=['bln_rub', 'yoy', 'rog']),
#            dict(var='RETAIL_SALES_FOOD',
#                 header=['продовольственные товары',
#                         'пищевые продукты, включая напитки и табачные изделия',
#                         'пищевые продукты, включая напитки, и табачные изделия'],
#                 unit=['bln_rub', 'yoy', 'rog']),
#            dict(var='RETAIL_SALES_NONFOOD',
#                 header='непродовольственные товары',
#                 unit=['bln_rub', 'yoy', 'rog'])
#        ]
#    ),
#    dict(
#        boundaries=[
#            dict(start='2.1.1. Доходы (по данным Федерального казначейства)',
#                 end='2.1.2. Расходы (по данным Федерального казначейства)')],
#        commands=[
#            dict(var='GOV_REVENUE_ACCUM_CONSOLIDATED',
#                 header='Консолидированный бюджет',
#                 unit='bln_rub'),
#            dict(var='GOV_REVENUE_ACCUM_FEDERAL',
#                 header='Федеральный бюджет',
#                 unit='bln_rub'),
#            dict(var='GOV_REVENUE_ACCUM_SUBFEDERAL',
#                 header='Консолидированные бюджеты субъектов Российской Федерации',
#                 unit='bln_rub')],
#        reader='fiscal'
#    ),
#    dict(
#        boundaries=[
#            dict(start='2.1.2. Расходы (по данным Федерального казначейства)',
#                 end='2.1.3. Превышение доходов над расходами')],
#        commands=[
#            dict(var='GOV_EXPENSE_ACCUM_CONSOLIDATED',
#                 header='Консолидированный бюджет',
#                 unit='bln_rub'),
#            dict(var='GOV_EXPENSE_ACCUM_FEDERAL',
#                 header='Федеральный бюджет',
#                 unit='bln_rub'),
#            dict(var='GOV_EXPENSE_ACCUM_SUBFEDERAL',
#                 header='Консолидированные бюджеты субъектов Российской Федерации',
#                 unit='bln_rub')],
#        reader='fiscal'
#    ),
#    dict(
#        boundaries=[
#            dict(start='2.1.3. Превышение доходов над расходами',
#                 end='2.2. Сальдированный финансовый результат')],
#        commands=[
#            dict(var='GOV_SURPLUS_ACCUM_FEDERAL',
#                 header='Федеральный бюджет',
#                 unit='bln_rub'),
#            dict(var='GOV_SURPLUS_ACCUM_SUBFEDERAL',
#                 header='Консолидированные бюджеты субъектов Российской Федерации',
#                 unit='bln_rub')],
#        reader='fiscal'
#    ),
#    dict(
#        # no quarterly or annual data for this definition
#        boundaries=[
#            dict(start='2.4.2. Дебиторская задолженность',
#                 end='2.5. Просроченная задолженность по заработной плате на начало месяца')],
#        commands=[
#            dict(var='CORP_RECEIVABLE',
#                 header='Дебиторская задолженность',
#                 unit='bln_rub'),
#            dict(var='CORP_RECEIVABLE_OVERDUE',
#                 header='в том числе просроченная',
#                 unit='bln_rub',
#                 # LATER: incorporate a check value
#                 check=('bln_rub', 'm', '2017-09', 2445.8)
#                 )]
#    )
#]
#"""
#
#    
